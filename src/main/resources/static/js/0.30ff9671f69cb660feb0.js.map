{"version":3,"sources":["webpack:///./src/common/Utils.js"],"names":["__webpack_require__","d","__webpack_exports__","buildTree","findFromTree","buildIdPath","getPageRights","getItemRights","__WEBPACK_IMPORTED_MODULE_0_lodash__","__WEBPACK_IMPORTED_MODULE_0_lodash___default","n","rows","length","rootNodes","_","filter","row","parentid","map","label","name","value","id","enabled","forEach","node","buildTreeNode","children","isEmpty","childNode","treeNodes","i","result","list","isNil","targetOfId","find","l","unshift","store","page","state","openInfo","rights","r","datatype"],"mappings":"oDAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAA,IAAAC,EAAAR,EAAA,QAAAS,EAAAT,EAAAU,EAAAF,GAqBML,EAAY,SAAAQ,GAChB,IAAKA,GAAQA,EAAKC,QAAU,EAC1B,SAEF,IAAMC,EAAYC,IAAEC,OAAOJ,EAAM,SAAAK,GAAA,OAAQA,EAAIC,WAAUC,IAAI,SAAAF,GACzD,OACEG,MAAOH,EAAII,KACXC,MAAOL,EAAIM,GACXC,QAASP,EAAIO,WAOjB,OAHAV,EAAUW,QAAQ,SAAAC,IAhCE,SAAhBC,EAAiBD,EAAMd,GAC3Bc,EAAKE,SAAWb,IAAEC,OAAOJ,EAAM,SAAAK,GAAA,OAAOA,EAAIC,WAAaQ,EAAKJ,QAAOH,IACjE,SAAAF,GACE,OACEG,MAAOH,EAAII,KACXC,MAAOL,EAAIM,GACXC,QAASP,EAAIO,WAKdT,IAAEc,QAAQH,EAAKE,iBAKXF,EAAKE,SAJZF,EAAKE,SAASH,QAAQ,SAAAK,GACpBH,EAAcG,EAAWlB,KAoB3Be,CAAcD,EAAMd,KAEfE,GAiBHT,EAAe,SAAfA,EAAgB0B,EAAWR,GAC/B,IAAK,IAAIS,EAAI,EAAGA,EAAID,EAAUlB,OAAQmB,IAAK,CACzC,IAAMN,EAAOK,EAAUC,GACvB,GAAIN,EAAKJ,QAAUC,EACjB,OAAOG,EAET,GAAKX,IAAEc,QAAQH,EAAKE,eAApB,CACE,IAAMK,EAAS5B,EAAaqB,EAAKE,SAAUL,GAC3C,GAAIU,EACF,OAAOA,GAMb,OAAO,MAGH3B,EAAc,SAAC4B,EAAMX,GACzB,GAAIR,IAAEc,QAAQK,IAASnB,IAAEoB,MAAMZ,GAC7B,SAIF,IAFA,IAAIU,KACAG,EAAarB,IAAEsB,KAAKH,EAAM,SAAAI,GAAA,OAAKA,EAAEf,KAAOA,KACpCR,IAAEc,QAAQO,IAChBH,EAAOM,QAAQH,EAAWb,IAC1Ba,EAAarB,IAAEsB,KAAKH,EAAM,SAAAI,GAAA,OAAKA,EAAEf,KAAOa,EAAWlB,WAErD,OAAOe,GAGH1B,EAAgB,SAACiC,EAAOC,GAK5B,OAJW1B,IAAEC,OACXwB,EAAME,MAAMC,SAASC,OACrB,SAAAC,GAAA,OAAKA,EAAE3B,WAAauB,IAAwB,IAAfI,EAAEC,UAAiC,IAAfD,EAAEC,aAKjDtC,EAAgB,SAACgC,EAAOC,GAK5B,OAJW1B,IAAEC,OACXwB,EAAME,MAAMC,SAASC,OACrB,SAAAC,GAAA,OAAKA,EAAE3B,WAAauB,IAAwB,IAAfI,EAAEC,UAAiC,IAAfD,EAAEC","file":"js/0.30ff9671f69cb660feb0.js","sourcesContent":["import _ from \"lodash\";\r\nconst buildTreeNode = (node, rows) => {\r\n  node.children = _.filter(rows, row => row.parentid === node.value).map(\r\n    row => {\r\n      return {\r\n        label: row.name,\r\n        value: row.id,\r\n        enabled: row.enabled\r\n        // disabled: !row.enabled\r\n      };\r\n    }\r\n  );\r\n  if (!_.isEmpty(node.children)) {\r\n    node.children.forEach(childNode => {\r\n      buildTreeNode(childNode, rows);\r\n    });\r\n  } else {\r\n    delete node.children;\r\n  }\r\n};\r\n\r\nconst buildTree = rows => {\r\n  if (!rows || rows.length <= 0) {\r\n    return [];\r\n  }\r\n  const rootNodes = _.filter(rows, row => !row.parentid).map(row => {\r\n    return {\r\n      label: row.name,\r\n      value: row.id,\r\n      enabled: row.enabled\r\n      // disabled: !row.enabled\r\n    };\r\n  });\r\n  rootNodes.forEach(node => {\r\n    buildTreeNode(node, rows);\r\n  });\r\n  return rootNodes;\r\n};\r\n\r\n// const findFromTree = (treeNodes, id) => {\r\n//   let nodeStack = treeNodes;\r\n//   while (!_.isEmpty(nodeStack)) {\r\n//     const node = nodeStack.pop();\r\n//     if (node.value === id) {\r\n//       return node;\r\n//     }\r\n//     if (!_.isEmpty(node.children)) {\r\n//       nodeStack = nodeStack.concat(node.children);\r\n//     }\r\n//   }\r\n\r\n//   return null;\r\n// };\r\nconst findFromTree = (treeNodes, id) => {\r\n  for (let i = 0; i < treeNodes.length; i++) {\r\n    const node = treeNodes[i];\r\n    if (node.value === id) {\r\n      return node;\r\n    }\r\n    if (!_.isEmpty(node.children)) {\r\n      const result = findFromTree(node.children, id);\r\n      if (result) {\r\n        return result;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst buildIdPath = (list, id) => {\r\n  if (_.isEmpty(list) || _.isNil(id)) {\r\n    return [];\r\n  }\r\n  let result = [];\r\n  let targetOfId = _.find(list, l => l.id === id);\r\n  while (!_.isEmpty(targetOfId)) {\r\n    result.unshift(targetOfId.id);\r\n    targetOfId = _.find(list, l => l.id === targetOfId.parentid);\r\n  }\r\n  return result;\r\n};\r\n\r\nconst getPageRights = (store, page) => {\r\n  const rs = _.filter(\r\n    store.state.openInfo.rights,\r\n    r => r.parentid === page && (r.datatype === 3 || r.datatype === 5)\r\n  );\r\n  return rs;\r\n};\r\n\r\nconst getItemRights = (store, page) => {\r\n  const rs = _.filter(\r\n    store.state.openInfo.rights,\r\n    r => r.parentid === page && (r.datatype === 4 || r.datatype === 5)\r\n  );\r\n  return rs;\r\n};\r\n\r\nexport { buildTree, findFromTree, buildIdPath, getPageRights, getItemRights };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Utils.js"],"sourceRoot":""}